{"version":3,"file":"component---src-pages-index-js-51b76e2950c2c720f852.js","mappings":"yLAuDA,UA9CkBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACnC,MAAMG,EAAeC,IAAIH,EAAM,qBACzBI,EAAQD,IAAIH,EAAM,2BAExB,OACEK,EAAAA,cAACC,EAAAA,EAAM,CAACL,SAAUA,GAChBI,EAAAA,cAACE,EAAAA,GAAM,CAACC,MAAO,WAAWN,EAAaM,SACrCH,EAAAA,cAAA,QAAMI,KAAK,cAAcC,QAASR,EAAaS,cAC/CN,EAAAA,cAAA,QAAMO,SAAS,WAAWF,QAASR,EAAaM,QAChDH,EAAAA,cAAA,QAAMI,KAAK,iBAAiBC,QAASR,EAAaS,cAClDN,EAAAA,cAAA,QAAMO,SAAS,SAASF,QAASR,EAAaW,MAC9CR,EAAAA,cAAA,QACEO,SAAS,WACTF,QAAQ,+EAEVL,EAAAA,cAAA,QACEI,KAAK,gBACLC,QAAQ,+EAEVL,EAAAA,cAAA,QAAMI,KAAK,oBAAoBC,QAASR,EAAaM,SAEvDH,EAAAA,cAAA,MAAIS,UAAU,YAAW,SACxBV,EAAMW,KAAKC,IACV,GAAuB,UAAnBA,EAAKC,KAAKC,KAAkB,CAC9B,MAAMV,EAAQL,IAAIa,EAAM,2BAA6BA,EAAKC,KAAKC,KAC/D,OACEb,EAAAA,cAAA,OAAKc,IAAKH,EAAKC,KAAKG,YAAYF,MAC9Bb,EAAAA,cAAA,MAAIS,UAAU,UACZT,EAAAA,cAACgB,EAAAA,GAAI,CAACC,GAAIN,EAAKC,KAAKG,YAAYF,MAAOV,IAEzCH,EAAAA,cAAA,aAAQW,EAAKC,KAAKG,YAAYG,MAC9BlB,EAAAA,cAAA,KAAGmB,wBAAyB,CAAEC,OAAQT,EAAKC,KAAKS,WAGtD,CACA,OAAO,CAAK,IAEP,C","sources":["webpack://personal-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\nimport get from \"lodash/get\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteMetadata = get(data, \"site.siteMetadata\");\n  const posts = get(data, \"allMarkdownRemark.edges\");\n\n  return (\n    <Layout location={location}>\n      <Helmet title={`Posts | ${siteMetadata.title}`}>\n        <meta name=\"description\" content={siteMetadata.description} />\n        <meta property=\"og:title\" content={siteMetadata.title} />\n        <meta name=\"og:description\" content={siteMetadata.description} />\n        <meta property=\"og:url\" content={siteMetadata.url} />\n        <meta\n          property=\"og:image\"\n          content=\"https://s3-us-west-2.amazonaws.com/russelljanderson-dev/static/sitecap.jpg\"\n        />\n        <meta\n          name=\"twitter:image\"\n          content=\"https://s3-us-west-2.amazonaws.com/russelljanderson-dev/static/sitecap.jpg\"\n        />\n        <meta name=\"twitter:image:alt\" content={siteMetadata.title} />\n      </Helmet>\n      <h2 className=\"subtitle\">Posts</h2>\n      {posts.map((post) => {\n        if (post.node.path !== \"/404/\") {\n          const title = get(post, \"node.frontmatter.title\") || post.node.path;\n          return (\n            <div key={post.node.frontmatter.path}>\n              <h3 className=\"status\">\n                <Link to={post.node.frontmatter.path}>{title}</Link>\n              </h3>\n              <small>{post.node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: post.node.excerpt }} />\n            </div>\n          );\n        }\n        return false;\n      })}\n    </Layout>\n  );\n};\n\nBlogIndex.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        url\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            path\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","data","location","siteMetadata","get","posts","React","Layout","Helmet","title","name","content","description","property","url","className","map","post","node","path","key","frontmatter","Link","to","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}